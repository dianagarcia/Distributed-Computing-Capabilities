{"paragraphs":[{"text":"%pyspark\n\n'''\nAuthors: Group14 : Diana Garcia (dgarciac), Vishal Ganwani (vganwani)\nAssignment 4: Distributed-Computing-Capabilities\nCode: This code is used to create a linear regression for predicting the median value of homes from Boston using Spark\n'''\n\n''' Importing relevant libraries '''\nfrom pyspark.sql import SQLContext\nfrom pyspark.sql.types import *\nfrom pyspark.sql import Row\nfrom pyspark.mllib.regression import LabeledPoint\nfrom pyspark.sql.functions import *\nfrom pyspark.mllib.feature import StandardScaler\nfrom pyspark.mllib.regression import LinearRegressionWithSGD\n\n''' Code reference taken from here - www.techpoweredmath.com/spark-dataframes-mllib-tutorial/ '''\n\n# Defining spark contexts\nsqlContext = SQLContext(sc)\n\n# Reading the input file (boston-house.csv) to create the training dataset\nhouses = sc.textFile('hdfs://sandbox.hortonworks.com/tmp/boston-data/boston-house.csv')\nhouses = houses.map(lambda line: line.split(\",\")) # Separating input attributes by comma\nheader = houses.first()\nhouses = houses.filter(lambda line:line != header) # Taking the header out of the dataset\n# Assigning name to each value for each row\ndf = houses.map(lambda line: Row(_MEDV = line[13], CRIM = line[0], ZN = line[1], INDUS=line[2], CHAS=line[3], NOX=line[4], RM=line[5], AGE=line[6], DIS=line[7], RAD=line[8], TAX=line[9], PTRATIO=line[10], B = line[11], LSTAT = line[12]))\n\n# Selecting input features (independent variables) to create a regression model; removed the last column which is the output variable (labell)\nfeatures = df.map(lambda row: row[0:len(row)-1])\n# Scaling and fitting features\nscaler = StandardScaler(withMean=True, withStd=True).fit(features)\n# Using the scaler from above step to transform features\nfeatures_transform = scaler.transform(features)\n# Selecting the last column which is the label\nlabel = df.map(lambda row: row[len(row)-1])\n# Combining output variable with all the scaled input attributes using Zip\ntraining_data = label.zip(features_transform).map(lambda row: LabeledPoint(row[0],[row[1]]))\n\n# Reading the output file (verification.csv) to predict the median values\nverification = sc.textFile('hdfs://sandbox.hortonworks.com/tmp/boston-data/verification.csv')\nverification = verification.map(lambda line: line.split(\",\")) # Splitting values by comma\nheader_Ver = verification.first()\nverification = verification.filter(lambda line:line != header_Ver) # Taking the header out of the dataset\n# Assigning name to each value for each row\ndf_ver = verification.map(lambda line: Row(CRIM = line[0], ZN = line[1], INDUS=line[2], CHAS=line[3], NOX=line[4], RM=line[5], AGE=line[6], DIS=line[7], RAD=line[8], TAX=line[9], PTRATIO=line[10], B = line[11], LSTAT = line[12]))\n# Selecting input features (independent variables) of the testing data\nfeatures_ver = df_ver.map(lambda row: row[0:])\n# Using previous scaler for transforming the features of the testing data\ntesting_data = scaler.transform(features_ver)\n\n''' Building the model using training dataset '''\nlinearModel = LinearRegressionWithSGD.train(training_data,intercept=True)\n''' Predicting the median values from the testing dataset '''\npredicted_MEDV = linearModel.predict(testing_data)\n\n''' Creating an output file which stores the predicted values '''\npredicted_MEDV.saveAsTextFile('hdfs://sandbox.hortonworks.com/tmp/boston-data/predicted_results')","dateUpdated":"2016-09-29T05:48:35+0000","config":{"colWidth":12,"graph":{"mode":"table","height":106,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1474951610246_-1623363155","id":"20160927-044650_121268464","dateCreated":"2016-09-27T04:46:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:390","dateFinished":"2016-09-29T05:48:57+0000","dateStarted":"2016-09-29T05:48:35+0000","result":{"code":"SUCCESS","type":"TEXT","msg":""},"focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1474951750672_1684520709","id":"20160927-044910_753155682","dateCreated":"2016-09-27T04:49:10+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:391"}],"name":"Group-14-Boston-House","id":"2BZHH5VBR","angularObjects":{"2BW4S5NJ4:shared_process":[],"2BY1Y2HJG:shared_process":[],"2BVYH21ZJ:shared_process":[],"2BV6637D6:shared_process":[],"2BX5CPDSX:shared_process":[],"2BWHGGFZJ:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}